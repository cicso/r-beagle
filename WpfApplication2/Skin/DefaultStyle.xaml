<ResourceDictionary x:Class="resourcer.DefaultStyle"
                    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
    <!-- фоновое изображение -->
    <ImageBrush x:Key="mainBackground" ImageSource="Resources/Background.jpg" Stretch="UniformToFill" AlignmentY="Top" />

    <!-- цвета скролбаров -->
    <SolidColorBrush x:Key="ScrollbarFill" Color="#FFBBBABA" />
    <SolidColorBrush x:Key="ScrollbarThumbColor" Color="#FF6E6E6E"/>
    <SolidColorBrush x:Key="ScrollbarMouseOver" Color="#FF5A82B2"/>
    <SolidColorBrush x:Key="ScrollbarBackground" Color="Transparent"/>


    <SolidColorBrush x:Key="allBackground" Color="#99000000" />
    <SolidColorBrush x:Key="allForeground" Color="#FFFFFFFF" />
    <SolidColorBrush x:Key="allBorder" Color="#7F91543C" />
    <SolidColorBrush x:Key="focusBackground" Color="#66666666" />
    
    
    

    <!-- кнопки закрыть свернуть развернуть -->
    <Style x:Key="headerButton" TargetType="{x:Type Button}">
        <Setter Property="Focusable" Value="False" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Grid>
                        <Border x:Name="grid" Background="Transparent" />
                        <Grid Width="9" Height="9">
                            <ContentPresenter />
                        </Grid>
                    </Grid>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="grid" Property="Background" Value="LightBlue"/>
                            <Setter TargetName="grid" Property="Opacity" Value="0.7"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultStyleWindow" TargetType="{x:Type Window}">
        <Setter Property="AllowsTransparency" Value="true" />
        <Setter Property="WindowStyle" Value="None" />
        <Setter Property="Background" Value="Transparent" />
        <Setter Property="ResizeMode" Value="CanResizeWithGrip" />
        <Setter Property="TextOptions.TextRenderingMode" Value="ClearType" />
        <Setter Property="TextOptions.TextFormattingMode" Value="Display" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Window}">
                    <Border BorderBrush="#E591543C" BorderThickness="1" Margin="7" Background="{DynamicResource mainBackground}">
                        <Border.Effect>
                            <DropShadowEffect ShadowDepth="0" Opacity="0.75" BlurRadius="10" />
                        </Border.Effect>
                        <Grid>
                            <DockPanel>
                                <!-- шапка программы -->
                                <Grid DockPanel.Dock="Top" Height="24" Background="#7F2E2E2E"
                                      MouseLeftButtonDown="headerMouseLClick">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="40" />
                                        <ColumnDefinition />
                                        <ColumnDefinition Width="32" />
                                        <ColumnDefinition Width="32" />
                                    </Grid.ColumnDefinitions>
                                    <Image x:Name="windowIcon" Grid.Column="0" HorizontalAlignment="Left" Width="32" Height="32" Margin="5,-5,0,-5"
                                           Source="{Binding Path=Icon, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" MouseLeftButtonDown="headerImageMouseClick" />
                                    <TextBlock Grid.Column="1" Text="{Binding Path=Title, Mode=OneWay, RelativeSource={RelativeSource TemplatedParent}}" FontFamily="Verdana" Foreground="#FFC3C3C3" VerticalAlignment="Center" Margin="26,0,0,2" FontSize="12" HorizontalAlignment="Center" />
                                    <Button
                                        Grid.Column="2"
                                        Click="headerButtonMinimize"
                                        VerticalAlignment="Stretch"
                                        Width="34"
                                        Cursor="Hand"
                                        Style="{StaticResource headerButton}">
                                        <Path
                                            Stroke="#E5BD633F"
                                            StrokeThickness="1"
                                            Stretch="None"
                                            RenderOptions.EdgeMode="Aliased"
                                            Data="M0,8 H8 M0,7 H8 M0,6 H8"
                                            />
                                    </Button>
                                    <Button
                                        Cursor="Hand"
                                        Grid.Column="3"
                                        Click="headerButtonClose"
                                        VerticalAlignment="Stretch"
                                        Width="34"
                                        Style="{StaticResource headerButton}">
                                        <Path
                                            Stroke="#E5BD633F"
                                            StrokeThickness="1.5"
                                            Stretch="None"
                                            Data="M0,0 L8,8 M0,8 L8,0" />
                                    </Button>
                                </Grid>
                                <ContentPresenter />
                            </DockPanel>
                            <Rectangle x:Name="grip" Cursor="SizeNWSE" Fill="Transparent" Width="10" Height="10"
                                       Visibility="Collapsed" VerticalAlignment="Bottom" HorizontalAlignment="Right"
                                       Margin="0,0,-3,-3" MouseDown="resizeWindowGrip" />
                        </Grid>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="WindowState" Value="Maximized">
                            <Setter TargetName="windowIcon" Property="Width" Value="24" />
                            <Setter TargetName="windowIcon" Property="Height" Value="24" />
                            <Setter TargetName="windowIcon" Property="Margin" Value="5,0,0,0" />
                        </Trigger>
                        <Trigger Property="ResizeMode" Value="CanResizeWithGrip">
                            <Setter TargetName="grip" Property="Visibility" Value="Visible"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <!-- Скролбары (горизонтальный и вертикальный) -->
    <Style x:Key="ScrollBarLineButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Margin="0" BorderThickness="1" BorderBrush="Transparent" Background="Transparent">
                        <Path x:Name="Arrow" HorizontalAlignment="Center" VerticalAlignment="Center"
                              Data="{Binding Content, RelativeSource={RelativeSource TemplatedParent}}"
                              Fill="{StaticResource ScrollbarFill}"/>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Fill" Value="{StaticResource ScrollbarMouseOver}" TargetName="Arrow"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarPageButton" TargetType="{x:Type RepeatButton}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RepeatButton}">
                    <Border Background="Transparent"/>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="ScrollBarThumb" TargetType="{x:Type Thumb}">
        <Setter Property="Focusable" Value="False"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Thumb}">
                    <Border BorderThickness="{TemplateBinding BorderThickness}" BorderBrush="Transparent"
                            Background="{StaticResource ScrollbarThumbColor}" x:Name="border"/>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter Property="Background" Value="{StaticResource ScrollbarMouseOver}" TargetName="border"/>
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <ControlTemplate x:Key="VerticalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Margin="0">
            <Grid.RowDefinitions>
                <RowDefinition MaxHeight="16"/>
                <RowDefinition Height="0.00001*"/>
                <RowDefinition MaxHeight="16"/>
            </Grid.RowDefinitions>
            <Border Grid.RowSpan="3" Background="{StaticResource ScrollbarBackground}" />
            <RepeatButton Grid.Row="0" Style="{StaticResource ScrollBarLineButton}" Height="16"
                          Command="ScrollBar.LineUpCommand" Content="M 0 4 L 8 4 L 4 0 Z" />
            <Track x:Name="PART_Track" Grid.Row="1" IsDirectionReversed="True">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageUpCommand" />
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" BorderThickness="4,0,4,0"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageDownCommand" />
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Row="3" Style="{StaticResource ScrollBarLineButton}" Height="16"
                  Command="ScrollBar.LineDownCommand" Content="M 0 0 L 4 4 L 8 0 Z" />
        </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="HorizontalScrollBar" TargetType="{x:Type ScrollBar}">
        <Grid Margin="0">
            <Grid.ColumnDefinitions>
                <ColumnDefinition MaxWidth="16" />
                <ColumnDefinition Width="0.00001*" />
                <ColumnDefinition MaxWidth="16" />
            </Grid.ColumnDefinitions>
            <Border Grid.ColumnSpan="3" Background="{StaticResource ScrollbarBackground}" />
            <RepeatButton Grid.Column="0" Style="{StaticResource ScrollBarLineButton}" Width="16"
                  Command="ScrollBar.LineLeftCommand" Content="M 4 0 L 4 8 L 0 4 Z"/>
            <Track x:Name="PART_Track" Grid.Column="1" IsDirectionReversed="False">
                <Track.DecreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageLeftCommand"/>
                </Track.DecreaseRepeatButton>
                <Track.Thumb>
                    <Thumb Style="{StaticResource ScrollBarThumb}" BorderThickness="0,4,0,4"/>
                </Track.Thumb>
                <Track.IncreaseRepeatButton>
                    <RepeatButton Style="{StaticResource ScrollBarPageButton}" Command="ScrollBar.PageRightCommand"/>
                </Track.IncreaseRepeatButton>
            </Track>
            <RepeatButton Grid.Column="3" Style="{StaticResource ScrollBarLineButton}" Width="16"
                  Command="ScrollBar.LineRightCommand" Content="M 0 0 L 4 4 L 0 8 Z"/>
        </Grid>
    </ControlTemplate>

    <Style x:Key="{x:Type ScrollBar}" TargetType="{x:Type ScrollBar}">
        <Style.Triggers>
            <Trigger Property="Orientation" Value="Horizontal">
                <Setter Property="Width" Value="Auto"/>
                <Setter Property="Height" Value="16"/>
                <Setter Property="Template" Value="{StaticResource HorizontalScrollBar}"/>
            </Trigger>
            <Trigger Property="Orientation" Value="Vertical">
                <Setter Property="Width" Value="16"/>
                <Setter Property="Height" Value="Auto"/>
                <Setter Property="Template" Value="{StaticResource VerticalScrollBar}"/>
            </Trigger>
        </Style.Triggers>
    </Style>



    <Style TargetType="Label">
        <Setter Property="Foreground" Value="#FFFFFFFF" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="11" />
    </Style>


    <Style TargetType="{x:Type Button}">
            <Setter Property="Foreground" Value="{DynamicResource allForeground}" />
            <Setter Property="Background" Value="{DynamicResource allBackground}" />
            <Setter Property="BorderBrush" Value="{DynamicResource allBorder}" />
            <Setter Property="FontFamily" Value="Verdana" />
            <Setter Property="FontSize" Value="11" />
            <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type Button}">
                    <Border TextBlock.Foreground="{TemplateBinding Foreground}" x:Name="Border" BorderThickness="1"
                            Background="{StaticResource allBackground}" BorderBrush="{StaticResource allBorder}">
                        <ContentPresenter Margin="2" HorizontalAlignment="Center" VerticalAlignment="Center" RecognizesAccessKey="True" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsMouseOver" Value="true">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource focusBackground}" />
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style TargetType="{x:Type TextBox}">
        <Setter Property="Padding" Value="1,2,1,1"/>
        <Setter Property="TextWrapping" Value="Wrap"/>
        <Setter Property="Foreground" Value="#FFFFFFFF"/>
        <Setter Property="SelectionBrush" Value="#FF878787"/>
        <Setter Property="CaretBrush" Value="DarkGoldenrod" />
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type TextBox}">
                    <Border Name="box_border" BorderThickness="1" BorderBrush="{DynamicResource allBorder}"
                            Background="{DynamicResource allBackground}">
                        <ScrollViewer Margin="0" x:Name="PART_ContentHost" />
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsReadOnly" Value="True">
                            <Setter Property="BorderBrush" TargetName="box_border" Value="{StaticResource allBorder}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style x:Key="{x:Type CheckBox}" TargetType="{x:Type CheckBox}">
        <Setter Property="Foreground" Value="{StaticResource allForeground}"/>
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border x:Name="Border" Width="13" Height="13" CornerRadius="0" BorderThickness="1"
                                     BorderBrush="{DynamicResource allBorder}" Background="{DynamicResource allBackground}">
                                <Grid>
                                    <Path Width="7" Height="7" x:Name="CheckMark" SnapsToDevicePixels="False"
                                          Visibility="Collapsed" StrokeThickness="2" Data="M 0 0 L 7 7 M 0 7 L 7 0"
                                          Stroke="Goldenrod">
                                    </Path>
                                </Grid>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center"
                                          HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Background" Value="{StaticResource focusBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="{x:Type RadioButton}" TargetType="{x:Type RadioButton}">
        <Setter Property="Foreground" Value="{StaticResource allForeground}"/>
        <Setter Property="FontFamily" Value="Verdana" />
        <Setter Property="FontSize" Value="11" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type RadioButton}">
                    <BulletDecorator Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Grid Width="13" Height="13">
                                <Ellipse x:Name="Border" StrokeThickness="1" Stroke="{StaticResource allBorder}"
                                         Fill="{StaticResource allBackground}"/>
                                <Ellipse x:Name="CheckMark" Margin="4" Visibility="Collapsed"
                                         Fill="Goldenrod"/>
                            </Grid>
                        </BulletDecorator.Bullet>
                        <ContentPresenter Margin="4,0,0,0" VerticalAlignment="Center"
                                          HorizontalAlignment="Left" RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="CheckMark" Property="Visibility" Value="Visible"/>
                        </Trigger>
                        <Trigger Property="IsMouseOver" Value="True">
                            <Setter TargetName="Border" Property="Fill" Value="{StaticResource focusBackground}"/>
                        </Trigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>



    <Style TargetType="{x:Type ListBox}">
        <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Disabled" />
        <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Visible" />
        <Setter Property="ScrollViewer.CanContentScroll" Value="true" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ListBox}">
                    <Border BorderThickness="1" BorderBrush="{StaticResource allBorder}"
                            Background="{StaticResource allBackground}">
                        <ScrollViewer Margin="0" Focusable="false">
                            <ItemsPresenter />
                        </ScrollViewer>
                    </Border>
                    <ControlTemplate.Triggers>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter Property="Foreground" Value="Gray" />
                        </Trigger>
                        <Trigger Property="IsGrouping"
                   Value="true">
                            <Setter Property="ScrollViewer.CanContentScroll"
                    Value="false" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

</ResourceDictionary>